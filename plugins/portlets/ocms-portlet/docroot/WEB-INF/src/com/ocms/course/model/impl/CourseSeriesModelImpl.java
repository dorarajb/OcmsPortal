/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ocms.course.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.ocms.course.model.CourseSeries;
import com.ocms.course.model.CourseSeriesModel;
import com.ocms.course.model.CourseSeriesSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the CourseSeries service. Represents a row in the &quot;CM_CourseSeries&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.ocms.course.model.CourseSeriesModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CourseSeriesImpl}.
 * </p>
 *
 * @author doraraj
 * @see CourseSeriesImpl
 * @see com.ocms.course.model.CourseSeries
 * @see com.ocms.course.model.CourseSeriesModel
 * @generated
 */
@JSON(strict = true)
public class CourseSeriesModelImpl extends BaseModelImpl<CourseSeries>
	implements CourseSeriesModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a course series model instance should use the {@link com.ocms.course.model.CourseSeries} interface instead.
	 */
	public static final String TABLE_NAME = "CM_CourseSeries";
	public static final Object[][] TABLE_COLUMNS = {
			{ "courseSeriesId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "courseId", Types.BIGINT },
			{ "locationId", Types.BIGINT },
			{ "type_", Types.VARCHAR },
			{ "start_date", Types.TIMESTAMP },
			{ "end_date", Types.TIMESTAMP },
			{ "publishing_status", Types.VARCHAR },
			{ "max_no_of_stud_reg", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table CM_CourseSeries (courseSeriesId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,courseId LONG,locationId LONG,type_ VARCHAR(75) null,start_date DATE null,end_date DATE null,publishing_status VARCHAR(75) null,max_no_of_stud_reg LONG)";
	public static final String TABLE_SQL_DROP = "drop table CM_CourseSeries";
	public static final String ORDER_BY_JPQL = " ORDER BY courseSeries.courseSeriesId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY CM_CourseSeries.courseSeriesId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.ocms.course.model.CourseSeries"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.ocms.course.model.CourseSeries"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.ocms.course.model.CourseSeries"),
			true);
	public static long COURSEID_COLUMN_BITMASK = 1L;
	public static long COURSESERIESID_COLUMN_BITMASK = 2L;
	public static long GROUPID_COLUMN_BITMASK = 4L;
	public static long LOCATIONID_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static CourseSeries toModel(CourseSeriesSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		CourseSeries model = new CourseSeriesImpl();

		model.setCourseSeriesId(soapModel.getCourseSeriesId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setCourseId(soapModel.getCourseId());
		model.setLocationId(soapModel.getLocationId());
		model.setType(soapModel.getType());
		model.setStart_date(soapModel.getStart_date());
		model.setEnd_date(soapModel.getEnd_date());
		model.setPublishing_status(soapModel.getPublishing_status());
		model.setMax_no_of_stud_reg(soapModel.getMax_no_of_stud_reg());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<CourseSeries> toModels(CourseSeriesSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<CourseSeries> models = new ArrayList<CourseSeries>(soapModels.length);

		for (CourseSeriesSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.ocms.course.model.CourseSeries"));

	public CourseSeriesModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _courseSeriesId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCourseSeriesId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _courseSeriesId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CourseSeries.class;
	}

	@Override
	public String getModelClassName() {
		return CourseSeries.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("courseSeriesId", getCourseSeriesId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("courseId", getCourseId());
		attributes.put("locationId", getLocationId());
		attributes.put("type", getType());
		attributes.put("start_date", getStart_date());
		attributes.put("end_date", getEnd_date());
		attributes.put("publishing_status", getPublishing_status());
		attributes.put("max_no_of_stud_reg", getMax_no_of_stud_reg());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long courseSeriesId = (Long)attributes.get("courseSeriesId");

		if (courseSeriesId != null) {
			setCourseSeriesId(courseSeriesId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long courseId = (Long)attributes.get("courseId");

		if (courseId != null) {
			setCourseId(courseId);
		}

		Long locationId = (Long)attributes.get("locationId");

		if (locationId != null) {
			setLocationId(locationId);
		}

		String type = (String)attributes.get("type");

		if (type != null) {
			setType(type);
		}

		Date start_date = (Date)attributes.get("start_date");

		if (start_date != null) {
			setStart_date(start_date);
		}

		Date end_date = (Date)attributes.get("end_date");

		if (end_date != null) {
			setEnd_date(end_date);
		}

		String publishing_status = (String)attributes.get("publishing_status");

		if (publishing_status != null) {
			setPublishing_status(publishing_status);
		}

		Long max_no_of_stud_reg = (Long)attributes.get("max_no_of_stud_reg");

		if (max_no_of_stud_reg != null) {
			setMax_no_of_stud_reg(max_no_of_stud_reg);
		}
	}

	@JSON
	@Override
	public long getCourseSeriesId() {
		return _courseSeriesId;
	}

	@Override
	public void setCourseSeriesId(long courseSeriesId) {
		_columnBitmask |= COURSESERIESID_COLUMN_BITMASK;

		if (!_setOriginalCourseSeriesId) {
			_setOriginalCourseSeriesId = true;

			_originalCourseSeriesId = _courseSeriesId;
		}

		_courseSeriesId = courseSeriesId;
	}

	public long getOriginalCourseSeriesId() {
		return _originalCourseSeriesId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getCourseId() {
		return _courseId;
	}

	@Override
	public void setCourseId(long courseId) {
		_columnBitmask |= COURSEID_COLUMN_BITMASK;

		if (!_setOriginalCourseId) {
			_setOriginalCourseId = true;

			_originalCourseId = _courseId;
		}

		_courseId = courseId;
	}

	public long getOriginalCourseId() {
		return _originalCourseId;
	}

	@JSON
	@Override
	public long getLocationId() {
		return _locationId;
	}

	@Override
	public void setLocationId(long locationId) {
		_columnBitmask |= LOCATIONID_COLUMN_BITMASK;

		if (!_setOriginalLocationId) {
			_setOriginalLocationId = true;

			_originalLocationId = _locationId;
		}

		_locationId = locationId;
	}

	public long getOriginalLocationId() {
		return _originalLocationId;
	}

	@JSON
	@Override
	public String getType() {
		if (_type == null) {
			return StringPool.BLANK;
		}
		else {
			return _type;
		}
	}

	@Override
	public void setType(String type) {
		_type = type;
	}

	@JSON
	@Override
	public Date getStart_date() {
		return _start_date;
	}

	@Override
	public void setStart_date(Date start_date) {
		_start_date = start_date;
	}

	@JSON
	@Override
	public Date getEnd_date() {
		return _end_date;
	}

	@Override
	public void setEnd_date(Date end_date) {
		_end_date = end_date;
	}

	@JSON
	@Override
	public String getPublishing_status() {
		if (_publishing_status == null) {
			return StringPool.BLANK;
		}
		else {
			return _publishing_status;
		}
	}

	@Override
	public void setPublishing_status(String publishing_status) {
		_publishing_status = publishing_status;
	}

	@JSON
	@Override
	public long getMax_no_of_stud_reg() {
		return _max_no_of_stud_reg;
	}

	@Override
	public void setMax_no_of_stud_reg(long max_no_of_stud_reg) {
		_max_no_of_stud_reg = max_no_of_stud_reg;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			CourseSeries.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CourseSeries toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CourseSeries)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CourseSeriesImpl courseSeriesImpl = new CourseSeriesImpl();

		courseSeriesImpl.setCourseSeriesId(getCourseSeriesId());
		courseSeriesImpl.setGroupId(getGroupId());
		courseSeriesImpl.setCompanyId(getCompanyId());
		courseSeriesImpl.setUserId(getUserId());
		courseSeriesImpl.setUserName(getUserName());
		courseSeriesImpl.setCreateDate(getCreateDate());
		courseSeriesImpl.setModifiedDate(getModifiedDate());
		courseSeriesImpl.setCourseId(getCourseId());
		courseSeriesImpl.setLocationId(getLocationId());
		courseSeriesImpl.setType(getType());
		courseSeriesImpl.setStart_date(getStart_date());
		courseSeriesImpl.setEnd_date(getEnd_date());
		courseSeriesImpl.setPublishing_status(getPublishing_status());
		courseSeriesImpl.setMax_no_of_stud_reg(getMax_no_of_stud_reg());

		courseSeriesImpl.resetOriginalValues();

		return courseSeriesImpl;
	}

	@Override
	public int compareTo(CourseSeries courseSeries) {
		long primaryKey = courseSeries.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CourseSeries)) {
			return false;
		}

		CourseSeries courseSeries = (CourseSeries)obj;

		long primaryKey = courseSeries.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		CourseSeriesModelImpl courseSeriesModelImpl = this;

		courseSeriesModelImpl._originalCourseSeriesId = courseSeriesModelImpl._courseSeriesId;

		courseSeriesModelImpl._setOriginalCourseSeriesId = false;

		courseSeriesModelImpl._originalGroupId = courseSeriesModelImpl._groupId;

		courseSeriesModelImpl._setOriginalGroupId = false;

		courseSeriesModelImpl._originalCourseId = courseSeriesModelImpl._courseId;

		courseSeriesModelImpl._setOriginalCourseId = false;

		courseSeriesModelImpl._originalLocationId = courseSeriesModelImpl._locationId;

		courseSeriesModelImpl._setOriginalLocationId = false;

		courseSeriesModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CourseSeries> toCacheModel() {
		CourseSeriesCacheModel courseSeriesCacheModel = new CourseSeriesCacheModel();

		courseSeriesCacheModel.courseSeriesId = getCourseSeriesId();

		courseSeriesCacheModel.groupId = getGroupId();

		courseSeriesCacheModel.companyId = getCompanyId();

		courseSeriesCacheModel.userId = getUserId();

		courseSeriesCacheModel.userName = getUserName();

		String userName = courseSeriesCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			courseSeriesCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			courseSeriesCacheModel.createDate = createDate.getTime();
		}
		else {
			courseSeriesCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			courseSeriesCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			courseSeriesCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		courseSeriesCacheModel.courseId = getCourseId();

		courseSeriesCacheModel.locationId = getLocationId();

		courseSeriesCacheModel.type = getType();

		String type = courseSeriesCacheModel.type;

		if ((type != null) && (type.length() == 0)) {
			courseSeriesCacheModel.type = null;
		}

		Date start_date = getStart_date();

		if (start_date != null) {
			courseSeriesCacheModel.start_date = start_date.getTime();
		}
		else {
			courseSeriesCacheModel.start_date = Long.MIN_VALUE;
		}

		Date end_date = getEnd_date();

		if (end_date != null) {
			courseSeriesCacheModel.end_date = end_date.getTime();
		}
		else {
			courseSeriesCacheModel.end_date = Long.MIN_VALUE;
		}

		courseSeriesCacheModel.publishing_status = getPublishing_status();

		String publishing_status = courseSeriesCacheModel.publishing_status;

		if ((publishing_status != null) && (publishing_status.length() == 0)) {
			courseSeriesCacheModel.publishing_status = null;
		}

		courseSeriesCacheModel.max_no_of_stud_reg = getMax_no_of_stud_reg();

		return courseSeriesCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{courseSeriesId=");
		sb.append(getCourseSeriesId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", courseId=");
		sb.append(getCourseId());
		sb.append(", locationId=");
		sb.append(getLocationId());
		sb.append(", type=");
		sb.append(getType());
		sb.append(", start_date=");
		sb.append(getStart_date());
		sb.append(", end_date=");
		sb.append(getEnd_date());
		sb.append(", publishing_status=");
		sb.append(getPublishing_status());
		sb.append(", max_no_of_stud_reg=");
		sb.append(getMax_no_of_stud_reg());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("com.ocms.course.model.CourseSeries");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>courseSeriesId</column-name><column-value><![CDATA[");
		sb.append(getCourseSeriesId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>courseId</column-name><column-value><![CDATA[");
		sb.append(getCourseId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>locationId</column-name><column-value><![CDATA[");
		sb.append(getLocationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>type</column-name><column-value><![CDATA[");
		sb.append(getType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>start_date</column-name><column-value><![CDATA[");
		sb.append(getStart_date());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>end_date</column-name><column-value><![CDATA[");
		sb.append(getEnd_date());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>publishing_status</column-name><column-value><![CDATA[");
		sb.append(getPublishing_status());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>max_no_of_stud_reg</column-name><column-value><![CDATA[");
		sb.append(getMax_no_of_stud_reg());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = CourseSeries.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			CourseSeries.class
		};
	private long _courseSeriesId;
	private long _originalCourseSeriesId;
	private boolean _setOriginalCourseSeriesId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _courseId;
	private long _originalCourseId;
	private boolean _setOriginalCourseId;
	private long _locationId;
	private long _originalLocationId;
	private boolean _setOriginalLocationId;
	private String _type;
	private Date _start_date;
	private Date _end_date;
	private String _publishing_status;
	private long _max_no_of_stud_reg;
	private long _columnBitmask;
	private CourseSeries _escapedModel;
}
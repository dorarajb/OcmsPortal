<%--
/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%
String tabs3 = ParamUtil.getString(request, "tabs3", "invite-email");

String[] tabs3Values = StringUtil.split(tabs3, StringPool.DASH);

NotificationTemplateType notificationTemplateType = NotificationTemplateType.parse(tabs3Values[0]);
NotificationType notificationType = NotificationType.parse(tabs3Values[1]);

CalendarNotificationTemplate calendarNotificationTemplate = CalendarNotificationTemplateLocalServiceUtil.fetchCalendarNotificationTemplate(calendar.getCalendarId(), notificationType, notificationTemplateType);

long calendarNotificationTemplateId = BeanPropertiesUtil.getLong(calendarNotificationTemplate, "calendarNotificationTemplateId");

User defaultSenderUser = NotificationUtil.getDefaultSenderUser(calendar);

String fromAddress = NotificationUtil.getTemplatePropertyValue(calendarNotificationTemplate, CalendarNotificationTemplateConstants.PROPERTY_FROM_ADDRESS, defaultSenderUser.getEmailAddress());
String fromName = NotificationUtil.getTemplatePropertyValue(calendarNotificationTemplate, CalendarNotificationTemplateConstants.PROPERTY_FROM_NAME, defaultSenderUser.getFullName());

String defaultTemplateSubject = NotificationUtil.getDefaultTemplate(notificationType, notificationTemplateType, NotificationField.SUBJECT);
String notificationTemplateSubject = BeanPropertiesUtil.getString(calendarNotificationTemplate, "subject", defaultTemplateSubject);

String defaultTemplateBody = NotificationUtil.getDefaultTemplate(notificationType, notificationTemplateType, NotificationField.BODY);
String notificationTemplateBody = BeanPropertiesUtil.getString(calendarNotificationTemplate, "body", defaultTemplateBody);
%>

<liferay-ui:header
	backURL="<%= redirect %>"
	title="<%= calendar.getName(locale) %>"
/>

<liferay-ui:tabs
	names="invite-email,reminder-email"
	param="tabs3"
	url="<%= portletURL %>"
/>

<liferay-portlet:actionURL name="updateCalendarNotificationTemplate" var="updateCalendarNotificationTemplateURL" />

<aui:form action="<%= updateCalendarNotificationTemplateURL %>" method="post" name="fm" onSubmit='<%= "event.preventDefault(); " + renderResponse.getNamespace() + "updateCalendarNotificationTemplate();" %>'>
	<aui:input name="mvcPath" type="hidden" value="/edit_calendar.jsp" />
	<aui:input name="calendarNotificationTemplateId" type="hidden" value="<%= calendarNotificationTemplateId %>" />
	<aui:input name="tabs2" type="hidden" value="<%= tabs2 %>" />
	<aui:input name="tabs3" type="hidden" value="<%= tabs3 %>" />
	<aui:input name="redirect" type="hidden" value="<%= currentURL %>" />
	<aui:input name="calendarId" type="hidden" value="<%= String.valueOf(calendar.getCalendarId()) %>" />
	<aui:input name="calendarResourceId" type="hidden" value="<%= (calendarResource != null) ? String.valueOf(calendarResource.getCalendarResourceId()) : StringPool.BLANK %>" />
	<aui:input name="notificationType" type="hidden" value="<%= notificationType.getValue() %>" />
	<aui:input name="notificationTemplateType" type="hidden" value="<%= notificationTemplateType.getValue() %>" />

	<aui:model-context bean="<%= calendarNotificationTemplate %>" model="<%= CalendarNotificationTemplate.class %>" />

	<aui:fieldset>
		<aui:input name="fromName" value="<%= fromName %>" />

		<aui:input name="fromAddress" value="<%= fromAddress %>" />

		<aui:input name="subject" value="<%= notificationTemplateSubject %>" />

		<aui:field-wrapper label="body">
			<liferay-ui:input-editor editorImpl="ckeditor" />

			<aui:input name="body" type="hidden" value="<%= notificationTemplateBody %>" />
		</aui:field-wrapper>
	</aui:fieldset>

	<div class="definition-of-terms">
		<h4><liferay-ui:message key="definition-of-terms" /></h4>

		<dl>
			<dt>
				[$EVENT_LOCATION$]
			</dt>
			<dd>
				<liferay-ui:message key="the-calendar-booking-location" />
			</dd>
			<dt>
				[$EVENT_START_DATE$]
			</dt>
			<dd>
				<liferay-ui:message key="the-calendar-booking-start-date" />
			</dd>
			<dt>
				[$EVENT_TITLE$]
			</dt>
			<dd>
				<liferay-ui:message key="the-calendar-booking-title" />
			</dd>

			<c:if test="<%= notificationTemplateType == NotificationTemplateType.INVITE %>">
				<dt>
					[$EVENT_URL$]
				</dt>
				<dd>
					<liferay-ui:message key="the-calendar-booking-url" />
				</dd>
			</c:if>

			<dt>
				[$FROM_ADDRESS$]
			</dt>
			<dd>
				<%= HtmlUtil.escape(fromAddress) %>
			</dd>
			<dt>
				[$FROM_NAME$]
			</dt>
			<dd>
				<%= HtmlUtil.escape(fromName) %>
			</dd>
			<dt>
				[$PORTAL_URL$]
			</dt>
			<dd>
				<%= company.getVirtualHostname() %>
			</dd>
			<dt>
				[$TO_ADDRESS$]
			</dt>
			<dd>
				<liferay-ui:message key="the-address-of-the-email-recipient" />
			</dd>
			<dt>
				[$TO_NAME$]
			</dt>
			<dd>
				<liferay-ui:message key="the-name-of-the-email-recipient" />
			</dd>
		</dl>
	</div>

	<aui:button-row>
		<aui:button type="submit" />

		<aui:button href="<%= redirect %>" type="cancel" />
	</aui:button-row>
</aui:form>

<aui:script>
	function <portlet:namespace />initEditor() {
		return '<%= UnicodeFormatter.toString(notificationTemplateBody) %>';
	}

	function <portlet:namespace />updateCalendarNotificationTemplate() {
		var notificationTemplateContentBody = document.getElementById('<portlet:namespace />body');

		if (notificationTemplateContentBody) {
			notificationTemplateContentBody.value = window.<portlet:namespace />editor.getHTML();
		}

		submitForm(document.<portlet:namespace />fm);
	}
</aui:script>